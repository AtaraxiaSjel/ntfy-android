name: Sync, Build, and Release APK Weekly

on:
  schedule:
    - cron: '0 3 * * 0'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Upstream Repository
        uses: actions/checkout@v4
        with:
          repository: 'binwiederhier/ntfy-android'
          path: 'upstream'
          fetch-depth: 0

      - name: Get Latest Upstream Tag
        id: upstream_tag
        run: |
          cd upstream
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Checkout Fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Fork Tag
        id: fork_tag
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "none")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Check for New Release
        id: check_release
        if: steps.upstream_tag.outputs.latest_tag != steps.fork_tag.outputs.latest_tag
        run: |
          echo "New upstream release found: ${{ steps.upstream_tag.outputs.latest_tag }}. Proceeding..."
          echo "proceed=true" >> $GITHUB_OUTPUT

      - name: Sync with Upstream
        if: steps.check_release.outputs.proceed == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git remote add upstream ./upstream
          git fetch upstream
          git checkout main
          git merge --no-edit "tags/${{ steps.upstream_tag.outputs.latest_tag }}"

      - name: Apply Patch Locally (For Build Only)
        if: steps.check_release.outputs.proceed == 'true'
        run: |
          echo "Applying patch for the build process."
          echo "${{ secrets.FIREBASE_PATCH }}" | base64 --decode > selfhosted.patch
          if ! git apply --check selfhosted.patch; then
            echo "::error::Patch cannot be applied cleanly. Please check for conflicts."
            exit 1
          fi
          git apply selfhosted.patch

      - name: Set up JDK
        if: steps.check_release.outputs.proceed == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        if: steps.check_release.outputs.proceed == 'true'
        uses: gradle/actions/setup-gradle@v4

      - name: Build Play version with Gradle
        if: steps.check_release.outputs.proceed == 'true'
        run: |
          ./gradlew assemblePlayRelease
          ./gradlew bundlePlayRelease

      - name: Build F-Droid version with Gradle
        if: steps.check_release.outputs.proceed == 'true'
        run: |
          ./gradlew assembleFdroidRelease
          ./gradlew bundleFdroidRelease

      - name: Push to Fork & Create Tag
        if: steps.check_release.outputs.proceed == 'true'
        run: |
          git commit -am "Sync with upstream tag ${{ steps.upstream_tag.outputs.latest_tag }}"
          git push origin main
          git tag ${{ steps.upstream_tag.outputs.latest_tag }}
          git push origin ${{ steps.upstream_tag.outputs.latest_tag }}

      - name: Prepare Artifact for Release
        if: steps.check_release.outputs.proceed == 'true'
        run: |
          mkdir -p ./release_artifacts
          find . -name "app*.apk" -exec cp {} ./release_artifacts/ \;
          find . -name "app*.aab" -exec cp {} ./release_artifacts/ \;

      - name: Create GitHub Release
        id: create_release
        if: steps.check_release.outputs.proceed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: release_artifacts/*.*
          tag_name: ${{ steps.upstream_tag.outputs.latest_tag }}
          name: "Release ${{ steps.upstream_tag.outputs.latest_tag }}"

      - name: Send ntfy success notification
        if: success() && steps.check_release.outputs.proceed == 'true'
        run: |
          curl -u "${{ secrets.NTFY_USER }}:${{ secrets.NTFY_PASSWORD }}" \
            -H "Title: ✅ New Release Successful: ${{ steps.upstream_tag.outputs.latest_tag }}" \
            -H "Click: ${{ steps.create_release.outputs.html_url }}" \
            -d "A new APK has been built for ${{ github.repository }}." \
            ${{ secrets.NTFY_SERVER || 'https://ntfy.sh' }}/${{ secrets.NTFY_TOPIC }}

  notify_on_failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
      - name: Send ntfy failure notification
        run: |
          curl -u "${{ secrets.NTFY_USER }}:${{ secrets.NTFY_PASSWORD }}" \
            -H "Title: ❌ Build FAILED in ${{ github.repository }}" \
            -H "Priority: high" \
            -H "Click: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            -d "Workflow failed. See details on GitHub Actions." \
            ${{ secrets.NTFY_SERVER || 'https://ntfy.sh' }}/${{ secrets.NTFY_TOPIC }}
